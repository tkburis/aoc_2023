var num_lines = to_number(input(""))
var grid = []
for (var i = 0; i < num_lines; i=i+1) {
    var ln = input("")
    var ln_array = []
    for (var j = 0; j < size(ln); j=j+1) {
        append(ln_array, ln[j])
    }
    append(grid, ln_array)
}

var digits = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0']
func is_digit(c) {
    for (var i = 0; i < size(digits); i=i+1) {
        if (c == digits[i]) {
            return true
        }
    }
    return false
}

func slice(str, i, j) {
    var ret = ""
    for (; i < j; i = i + 1) {
        ret = ret + str[i]
    }
    return ret
}

var ans = 0
for (var i = 0; i < num_lines; i=i+1) {
    if (i % 10 == 0) {print i}
    var n = size(grid[i])
    for (var j = 0; j < n; j=j+1) {
        if (grid[i][j] == '*') {
            var x = 1
            var checked = [
                [false, false, false],
                [false, false, false],
                [false, false, false]
            ]
            var pairs = []
            for (var a = -1; a <= 1 and 0 <= i + a and i + a < num_lines; a=a+1) {
                for (var b = -1; b <= 1 and 0 <= j + b and j + b < n; b=b+1) {
                    if (is_digit(grid[i+a][j+b]) and !checked[a+1][b+1]) {
                        checked[a+1][b+1] = true
                        var start = j + b
                        for (var c = j + b; c >= 0; c=c-1) {
                            if (!is_digit(grid[i+a][c])) {
                                break
                            }
                            start = c
                        }
                        var end = j + b
                        for (var c = j + b; c < n; c=c+1) {
                            if (!is_digit(grid[i+a][c])) {
                                break
                            }
                            if (c - j + 1 < 3) {
                                checked[a+1][c - j + 1] = true
                            }
                            end = c
                        }
                        
                        append(pairs, [i+a, start, end+1])
                    }
                }
            }
            if (size(pairs) == 2) {
                x = x * to_number(slice(grid[pairs[0][0]], pairs[0][1], pairs[0][2]))
                x = x * to_number(slice(grid[pairs[1][0]], pairs[1][1], pairs[1][2]))
                ans = ans + x
            }
        }
    }
}
print ans